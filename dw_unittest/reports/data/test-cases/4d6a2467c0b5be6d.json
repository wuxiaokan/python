{
  "uid" : "4d6a2467c0b5be6d",
  "name" : "test_get_code[data1]",
  "fullName" : "testcase.test_login.TestLogin#test_get_code",
  "historyId" : "77b0d5e66636e22cd31c6bbf0e81b71c",
  "time" : {
    "start" : 1614590580999,
    "stop" : 1614590581049,
    "duration" : 50
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 400",
  "statusTrace" : "self = <testcase.test_login.TestLogin object at 0x000001DA27297BE0>\ndata = {'expected': {'message': '密码不能为空', 'status_code': 400}, 'id': 2, 'json': {'deviceId': 'aaa', 'phone': '113157121093', 'type': '0'}, 'title': '不合理手机号'}\nlogin = {'Content-Type': 'application/json', 'token': 'd1c32cde-b24f-4861-bf56-bbcc7a25098c'}\n\n    @pytest.mark.parametrize(\"data\", datas_dict)\n    @allure.story(\"获取短信接口\")\n    def test_get_code(self, data, login):\n        print(login)\n        result = ApiLogin.getcode(url, headers, data['json'])\n        print(result)\n        log.info('获取短信接口日志信息: %s' % result)\n        # 断言验证\n>       assert (result['code'] == data['expected']['status_code'])\nE       assert 200 == 400\n\n..\\testcase\\test_login.py:31: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1614590580788,
      "stop" : 1614590580925,
      "duration" : 137
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 400",
    "statusTrace" : "self = <testcase.test_login.TestLogin object at 0x000001DA27297BE0>\ndata = {'expected': {'message': '密码不能为空', 'status_code': 400}, 'id': 2, 'json': {'deviceId': 'aaa', 'phone': '113157121093', 'type': '0'}, 'title': '不合理手机号'}\nlogin = {'Content-Type': 'application/json', 'token': 'd1c32cde-b24f-4861-bf56-bbcc7a25098c'}\n\n    @pytest.mark.parametrize(\"data\", datas_dict)\n    @allure.story(\"获取短信接口\")\n    def test_get_code(self, data, login):\n        print(login)\n        result = ApiLogin.getcode(url, headers, data['json'])\n        print(result)\n        log.info('获取短信接口日志信息: %s' % result)\n        # 断言验证\n>       assert (result['code'] == data['expected']['status_code'])\nE       assert 200 == 400\n\n..\\testcase\\test_login.py:31: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "551d5479bafeb98a",
      "name" : "log",
      "source" : "551d5479bafeb98a.txt",
      "type" : "text/plain",
      "size" : 155
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "获取短信接口"
  }, {
    "name" : "feature",
    "value" : "登录模块"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "SC-201907251023"
  }, {
    "name" : "thread",
    "value" : "3528-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'id': 2, 'title': '不合理手机号', 'json': {'phone': '113157121093', 'deviceId': 'aaa', 'type': '0'}, 'expected': {'status_code': 400, 'message': '密码不能为空'}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "dbe5ba66a72f15d5",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 200 == 400",
      "time" : {
        "start" : 1614590494065,
        "stop" : 1614590494115,
        "duration" : 50
      }
    }, {
      "uid" : "9c92dfd09447bf5c",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 200 == 400",
      "time" : {
        "start" : 1614570648015,
        "stop" : 1614570648059,
        "duration" : 44
      }
    }, {
      "uid" : "d35eeb56c425f478",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert 200 == 400",
      "time" : {
        "start" : 1614566314514,
        "stop" : 1614566314571,
        "duration" : 57
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4d6a2467c0b5be6d.json",
  "parameterValues" : [ "{'id': 2, 'title': '不合理手机号', 'json': {'phone': '113157121093', 'deviceId': 'aaa', 'type': '0'}, 'expected': {'status_code': 400, 'message': '密码不能为空'}}" ]
}